// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel TextureInterpolate

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2DArray<float4> Result;

Texture2DArray<float4> Tex0;
Texture2DArray<float4> Tex1;
Texture2DArray<float4> Tex2;

// The weight of each texture.
float3 weight;

[numthreads(8, 8, 6)]
void TextureInterpolate(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!
	Result[int3(id.x, id.y, id.z)] = weight.x * Tex0[int3(id.x, id.y, id.z)] 
		+ weight.y * Tex1[int3(id.x, id.y, id.z)] 
		+ weight.z * Tex2[int3(id.x, id.y, id.z)];
}
